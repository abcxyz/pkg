# Copyright 2024 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# This GitHub Action creates a Git tag and associated GitHub Release at the current SHA.
#
# It includes two outputs: the "current_version" and the "next_version".
#
# Example usage:
#
#     jobs:
#       release:
#         runs-on: 'ubuntu-latest'
#
#         # The following line is super super super important! This ensures the
#         # job only runs when the commit matches the expected message. There
#         # are additional checks in the action itself, including commit
#         # signature verification, but adding this line prevents the workflow
#         # from running at all, saving your previous GitHub Actions usage
#         #minutes.
#         if: |-
#           ${{ startsWith(github.event.head_commit.message, 'Release: v') }}
#
#         steps:
#           - name: 'Create release'
#             id: 'create-release'
#             uses: 'abcxyz/pkg/.github/actions/create-release@main'
#             with:
#               github_token: '${{ secrets.GITHUB_TOKEN }}' # Or an organization PAT
#               expected_email: 'user_or_bot@company.com'
#
#           # Example using go-releaser
#           - uses: 'actions/checkout@v4'
#             with:
#               fetch-depth: 0
#
#           - uses: 'actions/setup-go@v5'
#             with:
#               go-version-file: 'go.mod'
#
#           - uses: 'goreleaser/goreleaser-action@v5'
#             with:
#               args: 'release --clean'
#             env:
#               GORELEASER_CURRENT_TAG: 'v${{ steps.create-release.outputs.release_version }}'
#               GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}' # Or an organization PAT
#

name: 'create-release'

inputs:
  github_token:
    description: |-
      GitHub PAT or App Token to use for authentication.
    type: 'string'
    required: true

  expected_email:
    description: |-
      Email address expected for the commit.
    type: 'string'
    required: true

outputs:
  version:
    description: |-
      Version that is being released, without a leading "v".
    value: '${{ steps.create-release.outputs.version }}'
  tag:
    description: |-
      Tag name (version with a leading "v").
    value: '${{ steps.create-release.outputs.tag }}'
  created:
    description: |-
      Whether the release actually created (false if there was a transient error).
    value: '${{ steps.create-release.outputs.created }}'


runs:
  using: 'composite'
  steps:
    - name: 'Emit deprecation warning'
      shell: 'bash'
      run: |-
        echo "::warning::This action has moved to its own repo and will be removed in a future release. Please upgrade to https://github.com/abcxyz/actions... instead."

    - id: 'create-release'
      name: 'run abcxyz/actions'
      uses: 'abcxyz/actions/.github/actions/create-release@main' # ratchet:exclude
      with:
        github_token: '${{ inputs.github_token }}'
        expected_email: '${{ inputs.expected_email }}'
