name: 'terraform-lint'

on:
  workflow_call:
    inputs:
      terraform_version:
        description: 'The version of Terraform to install and use.'
        type: 'string'
        required: true
      directory:
        description: 'The directory upon which to lint Terraform configurations.'
        type: 'string'
        required: true
    secrets:
      workflow_github_token:
        description: 'A GitHub token to use for accessing private repositories.'
        required: false

env:
  TF_IN_AUTOMATION: 'true'

jobs:
  # lint runs Terraform formatting and validation checks. It finds all Terraform
  # nested directories within the given parent directory.
  #
  # Do not change this job name. Job names are used as identifiers in status
  # checks, and changing this name will cause status checks to fail.
  lint:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b' # ratchet:actions/checkout@v3

      - name: 'Setup Terraform'
        uses: 'hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1' # ratchet:hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: '${{ inputs.terraform_version }}'

      - name: 'Check formatting'
        shell: 'bash'
        working-directory: '${{ inputs.directory }}'
        run: |-
          terraform fmt -recursive -check -diff

      # secrets cannot be used for conditional `if` for steps, default to github.token (https://github.com/actions/runner/issues/520)
      - name: 'Set Git Credentials'
        shell: 'bash'
        run: |-
          git config --global url."https://terraform-lint:${{ secrets.workflow_github_token || github.token }}@github.com".insteadOf "https://github.com"

      - name: 'Initialize and validate'
        shell: 'bash'
        working-directory: '${{ inputs.directory }}'
        env:
          GITHUB_TOKEN: '${{ secrets.workflow_github_token || github.token }}'
        run: |-
          TERRAFORM_DIRS="$(find . -name '*.tf' -printf "%h\n" | sort -u | tr '\n' ' ')"

          for DIR in ${TERRAFORM_DIRS}; do
            echo "::group::${DIR}"

            pushd "${DIR}" &>/dev/null
            terraform init -backend=false -input=false
            terraform validate
            popd &>/dev/null

            echo "::endgroup::"
          done
