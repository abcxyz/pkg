name: 'go-lint'

on:
  workflow_call:
    inputs:
      go_version:
        description: 'The version of Go to install and use.'
        type: 'string'
        required: true
      directory:
        description: 'Directory in which Go files reside.'
        type: 'string'
        default: '.'

jobs:
  # modules checks if the go modules are all up-to-date. While rare with modern
  # versions of Go, it's possible to take a dependency on a package without
  # updating the module file.
  #
  # Do not change this job name. Job names are used as identifiers in status
  # checks, and changing this name will cause status checks to fail.
  modules:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b' # ratchet:actions/checkout@v3

      - name: 'Setup Go'
        uses: 'actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568' # ratchet:actions/setup-go@v3
        with:
          go-version: '${{ inputs.go_version }}'

      - name: 'Check modules'
        shell: 'bash'
        working-directory: '${{ inputs.directory }}'
        run: |-
          for d in $(find . -name go.mod); do
            (cd $(dirname $d) && go mod tidy)
          done
          if [ -n "$(git status -s -uall)" ]; then
            echo "::error title=Go module changes::Detected go module changes"
            git -c color.ui=always diff
            exit 1
          fi

  # golangci runs golangci-lint. If a .golangci.yml or .golangci.yaml file
  # exists at the root of the repository, it uses those custom settings. If no
  # such file exists, it uses a selection of sane defaults.
  #
  # Do not change this job name. Job names are used as identifiers in status
  # checks, and changing this name will cause status checks to fail.
  golangci:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b' # ratchet:actions/checkout@v3

      - name: 'Setup Go'
        uses: 'actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568' # ratchet:actions/setup-go@v3
        with:
          go-version: '${{ inputs.go_version }}'

      - name: 'Lint (default configuration)'
        if: ${{ hashFiles('.golangci.yml') == '' && hashFiles('.golangci.yaml') == '' }}
        uses: 'golangci/golangci-lint-action@07db5389c99593f11ad7b44463c2d4233066a9b1' # ratchet:golangci/golangci-lint-action@v3
        with:
          args: |-
            --enable=${{ join(fromJson('[
              "asciicheck",
              "bidichk",
              "bodyclose",
              "containedctx",
              "depguard",
              "dogsled",
              "errcheck",
              "errchkjson",
              "errname",
              "errorlint",
              "exhaustive",
              "exportloopref",
              "forcetypeassert",
              "godot",
              "gofumpt",
              "goheader",
              "goimports",
              "gomodguard",
              "goprintffuncname",
              "gosec",
              "gosimple",
              "govet",
              "ifshort",
              "ineffassign",
              "makezero",
              "noctx",
              "nolintlint",
              "prealloc",
              "predeclared",
              "revive",
              "sqlclosecheck",
              "staticcheck",
              "stylecheck",
              "tenv",
              "thelper",
              "tparallel",
              "typecheck",
              "unconvert",
              "unused",
              "whitespace",
            ]'), ',') }} --max-issues-per-linter=0 --max-same-issues=0 --timeout=5m
          working-directory: '${{ inputs.directory }}'

      - name: 'Lint (custom configuration)'
        if: ${{ hashFiles('.golangci.yml') != '' && hashFiles('.golangci.yaml') != '' }}
        uses: 'golangci/golangci-lint-action@07db5389c99593f11ad7b44463c2d4233066a9b1' # ratchet:golangci/golangci-lint-action@v3
        with:
          working-directory: '${{ inputs.directory }}'
