# Copyright 2023 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'go-lint'

on:
  workflow_call:
    inputs:
      go_version:
        description: 'The version of Go to install and use.'
        type: 'string'
        required: true
      golangci_url:
        description: 'The URL to a golangci file. This is only used if no file is found in the local directory.'
        type: 'string'
        default: 'https://raw.githubusercontent.com/abcxyz/pkg/main/.golangci.yml'
      directory:
        description: 'Directory in which Go files reside.'
        type: 'string'
        default: '.'
      golangci_lint_version:
        description: 'Version of golangci linter to use'
        type: 'string'
        default: 'v1.53'

jobs:
  # modules checks if the go modules are all up-to-date. While rare with modern
  # versions of Go, it's possible to take a dependency on a package without
  # updating the module file.
  #
  # Do not change this job name. Job names are used as identifiers in status
  # checks, and changing this name will cause status checks to fail.
  modules:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9' # ratchet:actions/checkout@v3

      - name: 'Setup Go'
        uses: 'actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753' # ratchet:actions/setup-go@v4
        with:
          go-version: '${{ inputs.go_version }}'
          cache: false

      - name: 'Check modules'
        shell: 'bash'
        working-directory: '${{ inputs.directory }}'
        run: |-
          for d in $(find . -name go.mod); do
            (cd $(dirname $d) && go mod tidy)
          done
          if [ -n "$(git status -s -uall)" ]; then
            echo "::error title=Go module changes::Detected go module changes"
            git -c color.ui=always diff
            exit 1
          fi

  # golangci runs golangci-lint. If a .golangci.yml or .golangci.yaml file
  # exists at the root of the repository, it uses those custom settings. If no
  # such file exists, it uses a selection of sane defaults.
  #
  # Do not change this job name. Job names are used as identifiers in status
  # checks, and changing this name will cause status checks to fail.
  golangci:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9' # ratchet:actions/checkout@v3

      - name: 'Setup Go'
        uses: 'actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753' # ratchet:actions/setup-go@v4
        with:
          go-version: '${{ inputs.go_version }}'

      - name: 'Lint (download default configuration)'
        id: 'load-default-config'
        if: '${{ hashFiles(''.golangci.yml'', ''.golangci.yaml'') == '''' }}'
        run: |-
          # Create a unique output file outside of the checkout.
          GOLANGCI_YML="${RUNNER_TEMP}/${GITHUB_SHA:0:7}.golangci.yml"

          # Download the file, passing in authentication to get a higher rate
          # limit: https://docs.github.com/en/rest/overview/resources-in-the-rest-api?apiVersion=2022-11-28#rate-limits-for-requests-from-github-actions
          curl "${{ inputs.golangci_url }}" \
            --silent \
            --fail \
            --location \
            --header "Authorization: Token ${{ github.token }}" \
            --output "${GOLANGCI_YML}"

          # Save the result to an output.
          echo "::notice::Wrote configuration file to ${GOLANGCI_YML}"
          echo "output-file=${GOLANGCI_YML}" >> "${GITHUB_OUTPUT}"

      - name: 'Lint (default configuration)'
        if: '${{ hashFiles(''.golangci.yml'', ''.golangci.yaml'') == '''' }}'
        uses: 'golangci/golangci-lint-action@639cd343e1d3b897ff35927a75193d57cfcba299' # ratchet:golangci/golangci-lint-action@v3
        with:
          args: |-
            --config "${{ steps.load-default-config.outputs.output-file }}"
          version: '${{ inputs.golangci_lint_version }}'
          working-directory: '${{ inputs.directory }}'

      - name: 'Lint (custom configuration)'
        if: '${{ hashFiles(''.golangci.yml'', ''.golangci.yaml'') != '''' }}'
        uses: 'golangci/golangci-lint-action@639cd343e1d3b897ff35927a75193d57cfcba299' # ratchet:golangci/golangci-lint-action@v3
        with:
          version: '${{ inputs.golangci_lint_version }}'
          working-directory: '${{ inputs.directory }}'
