name: 'Go test'

on:
  workflow_call:
    inputs:
      go_version:
        description: 'The version of Go to install and use.'
        type: 'string'
        required: true
      go_packages:
        description: 'List of go packages to test.'
        type: 'string'
        default: './...'
      go_test_timeout:
        description: 'Timeout for Go tests.'
        type: 'string'
        default: '10m'
      directory:
        description: 'Directory in which Go files reside.'
        type: 'string'
        default: '.'

jobs:
  go_test:
    name: 'go test'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b' # ratchet:actions/checkout@v3

      - name: 'Setup Go'
        uses: 'actions/setup-go@fcdc43634adb5f7ae75a9d7a9b9361790f7293e2' # ratchet:actions/setup-go@v3
        with:
          go-version: '${{ inputs.go_version }}'

      - name: 'Cache dependencies'
        uses: 'actions/cache@48af2dc4a9e8278b89d7fa154b955c30c6aaab09' # ratchet:actions/cache@v3
        with:
          path: |-
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |-
            ${{ runner.os }}-go-
            ${{ runner.os }}-go-test-

      - name: 'Test'
        shell: 'bash'
        working-directory: '${{ inputs.directory }}'
        run: |-
          go test \
            -count=1 \
            -coverprofile=./coverage.out \
            -race \
            -shuffle=on \
            -timeout='${{ inputs.go_test_timeout }}' \
            ${{ inputs.go_packages }}

      - name: 'Coverage'
        shell: 'bash'
        working-directory: '${{ inputs.directory }}'
        run: |-
          OUTPUT="$(go tool cover -func=./coverage.out)"
          TOTAL="$(echo $OUTPUT | awk 'END{print $NF}')"
          tee -a $GITHUB_STEP_SUMMARY > /dev/null <<EOF
            ## Coverage: ${TOTAL}

            \`\`\`text
            ${OUTPUT}
            \`\`\`
          EOF
