name: 'go-test'

on:
  workflow_call:
    inputs:
      os:
        description: 'Operating system on which to run tests.'
        type: 'string'
        default: 'ubuntu-latest'
      go_version:
        description: 'The version of Go to install and use.'
        type: 'string'
        required: true
      go_packages:
        description: 'List of go packages to test.'
        type: 'string'
        default: './...'
      go_test_timeout:
        description: 'Timeout for Go tests.'
        type: 'string'
        default: '10m'
      env:
        description: 'JSON-stringified environment variables for tests.'
        type: 'string'
        default: '{}'
      directory:
        description: 'Directory to the root of the Go module.'
        type: 'string'
        default: '.'

jobs:
  # test runs the Go test files. It checks out the source code and configures
  # the Go runtime. It also generates a coverage report and puts the coverage
  # report as a job summary.
  #
  # By default, it tests all packages, but that can be customized by setting
  # "go_packages".
  #
  # Do not change this job name. Job names are used as identifiers in status
  # checks, and changing this name will cause status checks to fail.
  test:
    runs-on: '${{ inputs.os }}'
    steps:
      - name: 'Configure environment variables'
        if: ${{ inputs.env != '{}' }}
        run: |-
          jq -r "to_entries | map(\"\(.key)=\(.value|tostring)\") | .[]" <<< '${{ inputs.env }}' >> $GITHUB_ENV

      - name: 'Checkout'
        uses: 'actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b' # ratchet:actions/checkout@v3

      - name: 'Setup Go'
        uses: 'actions/setup-go@fcdc43634adb5f7ae75a9d7a9b9361790f7293e2' # ratchet:actions/setup-go@v3
        with:
          go-version: '${{ inputs.go_version }}'

      - name: 'Cache dependencies'
        uses: 'actions/cache@48af2dc4a9e8278b89d7fa154b955c30c6aaab09' # ratchet:actions/cache@v3
        with:
          path: |-
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |-
            ${{ runner.os }}-go-
            ${{ runner.os }}-go-test-

      - name: 'Test'
        shell: 'bash'
        working-directory: '${{ inputs.directory }}'
        run: |-
          go test \
            -count=1 \
            -coverprofile=./coverage.out \
            -race \
            -shuffle=on \
            -timeout='${{ inputs.go_test_timeout }}' \
            ${{ inputs.go_packages }}

      - name: 'Coverage'
        shell: 'bash'
        working-directory: '${{ inputs.directory }}'
        run: |-
          OUTPUT="$(go tool cover -func=./coverage.out)"
          TOTAL="$(echo $OUTPUT | awk 'END{print $NF}')"
          tee -a $GITHUB_STEP_SUMMARY > /dev/null <<EOF
            ## Coverage: ${TOTAL}

            \`\`\`text
            ${OUTPUT}
            \`\`\`
          EOF
