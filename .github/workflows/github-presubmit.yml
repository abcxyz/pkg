name: CI - Test Go

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  GOMAXPROCS: 7

# If a new commit comes in, cancel the current action run.
concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      
      - name: gofmt
        run: gofmt -s -d -l . 2>&1 | tee /dev/stderr | (! read)

      - name: goimports
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          goimports -l . 2>&1 | tee /dev/stderr | (! read)
      - name: gomodtidy
        run: |
          for i in $(find . -name go.mod); do
            pushd $(dirname $i) > /dev/null
            go mod tidy
            popd > /dev/null
          done
          git diff go.mod | tee /dev/stderr | (! read)
          git diff go.sum | tee /dev/stderr | (! read)
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      # Cache go dependencies to reduce time for CI setup
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-test-
            ${{ runner.os }}-go-
      - name: Run Build Script
        run: |
          go test -shuffle=on -count=1 -race -timeout=10m -coverprofile=coverage.out ./...