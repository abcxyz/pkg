# Copyright 2025 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'lint'

on:
  pull_request:
  merge_group:

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  init:
    runs-on: 'ubuntu-latest'
    if: |
      github.repository != 'abcxyz/pkg'
    outputs:
      lint-targets: '${{ steps.lint-targets.outputs.lint-targets }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # ratchet:actions/checkout@v4
        with:
          fetch-depth: 1 # shallow checkout
          ref: '${{ github.event.pull_request.head.sha }}'

      - name: 'Identify Lint Targets'
        id: 'lint-targets'
        env:
          REF: '${{ github.event.pull_request.head.sha }}'
        shell: 'bash'
        run: |-
          declare -a TARGETS=()
          if git ls-tree -r --name-only "$REF" | LC_ALL=C grep --with-filename -E '(go.mod|/.*\.go$)' >/dev/null; then
            TARGETS+=("golang" "golang-modules")
          fi
          if git ls-tree -r --name-only "$REF" | LC_ALL=C grep --with-filename -E '.*\.(java)$' >/dev/null; then
            TARGETS+=("java")
          fi
          if git ls-tree -r --name-only "$REF" | LC_ALL=C grep --with-filename -E '.*\.(js)$' >/dev/null; then
            TARGETS+=("javascript")
          fi
          if git ls-tree -r --name-only "$REF" | LC_ALL=C grep --with-filename -E '.*\.(ts)$' >/dev/null; then
            TARGETS+=("typescript")
          fi
          if git ls-tree -r --name-only "$REF" | LC_ALL=C grep --with-filename -E '.*\.(sh)$' >/dev/null; then
            TARGETS+=("shell")
          fi
          if git ls-tree -r --name-only "$REF" | LC_ALL=C grep --with-filename -E '.*\.(tf)$' >/dev/null; then
            TARGETS+=("terraform")
          fi
          if git ls-tree -r --name-only "$REF" | LC_ALL=C grep --with-filename -E '.*\.(yaml|yml)$' >/dev/null; then
            TARGETS+=("yaml")
          fi
          LINT_TARGETS="$(jq --compact-output --null-input '$ARGS.positional' --args -- "${TARGETS[@]}")"
          echo "lint-targets -> ${LINT_TARGETS}"
          echo "lint-targets=${LINT_TARGETS}" >> $GITHUB_OUTPUT

  lint:
    runs-on: |-
     ${{ vars.LINT_RUNS_ON || 'ubuntu-latest' }}
    needs:
      - 'init'
    if: |
      needs.init.outputs.lint-targets != '[]' && github.repository != 'abcxyz/pkg'
    permissions:
      contents: 'read'
    strategy:
      fail-fast: false
      max-parallel: 100
      matrix:
        lint-target: '${{ fromJSON(needs.init.outputs.lint-targets) }}'
    # TODO: Consider parsing from config file in the repo.
    env:
      ##############
      ## GOLANG ####
      ##############
      # The version of Go to install and use.
      GO_LINT_GO_VERSION: |-
        ${{ vars.GO_LINT_GO_VERSION }}
      # Path to the go.mod file to extract a version.
      GO_LINT_GO_VERSION_FILE: |-
        ${{ vars.GO_LINT_GO_VERSION_FILE || 'go.mod' }}
      # The URL to a golangci file. This is only used if no file is found in the local directory.
      GO_LINT_GOLANGCI_URL: |-
        ${{ vars.GO_LINT_GOLANGCI_URL || 'https://raw.githubusercontent.com/abcxyz/pkg/main/.golangci.yml' }}
      # Directory in which Go files reside.
      GO_LINT_DIRECTORY: |-
        ${{ vars.GO_LINT_DIRECTORY || '.' }}
      # Version of golangci linter to use.
      GO_LINT_GOLANGCI_LINT_VERSION: |-
        ${{ vars.GO_LINT_GOLANGCI_LINT_VERSION || 'v1.64' }}
      ##############
      ## JAVA ######
      ##############
      JAVA_LINT_JAVA_VERSION: |-
        ${{ vars.JAVA_LINT_JAVA_VERSION }}
      JAVA_LINT_JAVA_DISTRIBUTION: |-
        ${{ vars.JAVA_LINT_JAVA_VERSION || 'zulu' }}
      JAVA_LINT_GOOGLE_JAVA_FORMAT_VERSION: |-
        ${{ vars.JAVA_LINT_GOOGLE_JAVA_FORMAT_VERSION || '1.25.2' }}
      JAVA_LINT_DIRECTORY: |-
        ${{ vars.JAVA_LINT_DIRECTORY || '.' }}
      ##############
      ## SHELL #####
      ##############
      LINT_SHELL_TARGET: |-
        ${{ vars.LINT_SHELL_TARGET || '.' }}
      ##############
      ## TERRAFORM #
      ##############
      TERRAFORM_LINT_TERRAFORM_VERSION: |-
        ${{ vars.TERRAFORM_LINT_TERRAFORM_VERSION }}
      TERRAFORM_LINT_DIRECTORY: |-
        ${{ vars.TERRAFORM_LINT_DIRECTORY }}
      TERRAFORM_LINT_WALK_DIRS: |-
        ${{ vars.TERRAFORM_LINT_WALK_DIRS || true }}
      TERRAFORM_LINT_IGNORED_WALK_DIRS: |-
        ${{ vars.TERRAFORM_LINT_IGNORED_WALK_DIRS || '' }}
      ##############
      ## YAML ######
      ##############
      # The URL to a yamllint config file. This is only used if no file is found in the local directory.
      YAML_LINT_YAMLLINT_URL: |-
        ${{ vars.YAML_LINT_YAMLLINT_URL || 'https://raw.githubusercontent.com/abcxyz/pkg/main/.yamllint.yml' }}
      # Version of yamllint linter to use
      YAML_LINT_YAMLLINT_VERSION: |-
        ${{ vars.YAML_LINT_YAMLLINT_VERSION || '1.32.0' }}
      # File or directory containing YAML files to lint.
      YAML_LINT_TARGET: |-
        ${{ vars.YAML_LINT_TARGET || '.' }}

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # ratchet:actions/checkout@v4
        with:
          fetch-depth: 1 # shallow clone

      - name: '[GOLANG] Lint Go'
        if: |
          matrix.lint-target == 'golang'
        uses: 'abcxyz/pkg/.github/actions/lint-go@main'
        with:
          go_version: '${{ env.GO_LINT_GO_VERSION }}'
          go_version_file: '${{ env.GO_LINT_GO_VERSION_FILE }}'
          golangci_url: '${{ env.GO_LINT_GOLANGCI_URL }}'
          directory: '${{ env.GO_LINT_DIRECTORY }}'
          golangci_lint_version: '${{ env.GO_LINT_GOLANGCI_LINT_VERSION }}'

      - name: '[GOLANG] Lint Go modules'
        if: |
          matrix.lint-target == 'golang-modules'
        uses: 'abcxyz/pkg/.github/actions/lint-go-modules@main'
        with:
          go_version: '${{ env.GO_LINT_GO_VERSION }}'
          go_version_file: '${{ env.GO_LINT_GO_VERSION_FILE }}'
          golangci_url: '${{ env.GO_LINT_GOLANGCI_URL }}'
          directory: '${{ env.GO_LINT_DIRECTORY }}'
          golangci_lint_version: '${{ env.GO_LINT_GOLANGCI_LINT_VERSION }}'

      - name: '[JAVA] Lint Java'
        if: |
          matrix.lint-target == 'java'
        uses: 'abcxyz/pkg/.github/actions/lint-java@main'
        with:
          java_version: '${{ env.JAVA_LINT_JAVA_VERSION }}'
          java_distribution: '${{ env.JAVA_LINT_JAVA_DISTRIBUTION }}'
          google_java_format_version: '${{ env.JAVA_LINT_GOOGLE_JAVA_FORMAT_VERSION }}'
          directory: '${{ env.JAVA_LINT_DIRECTORY }}'

      - name: '[JAVASCRIPT] Lint Javascript'
        if: |
          matrix.lint-target == 'javascript'
        run: |-
          echo "TODO: Lint javascript"

      - name: '[TYPESCRIPT] Lint Typescript'
        if: |
          matrix.lint-target == 'typescript'
        run: |-
          echo "TODO: Lint typescript"

      - name: '[SHELL] Lint Shell'
        if: |
          matrix.lint-target == 'shell'
        uses: 'abcxyz/pkg/.github/actions/lint-shell@main'
        with:
          target: '${{ env.LINT_SHELL_TARGET }}'

      - name: '[TERRAFORM] Lint Terraform'
        if: |
          matrix.lint-target == 'terraform'
        uses: 'abcxyz/pkg/.github/actions/lint-terraform@main'
        with:
          terraform_version: '${{ env.TERRAFORM_LINT_TERRAFORM_VERSION }}'
          directory: '${{ env.TERRAFORM_LINT_DIRECTORY }}'
          walk_dirs: '${{ env.TERRAFORM_LINT_WALK_DIRS }}'
          ignored_walk_dirs: '${{ env.TERRAFORM_LINT_IGNORED_WALK_DIRS }}'

      - name: '[YAML] lint yaml'
        if: |
          matrix.lint-target == 'yaml'
        uses: 'abcxyz/pkg/.github/actions/lint-yaml@main'
        with:
          yamllint_url: '${{ env.YAML_LINT_YAMLLINT_URL }}'
          yamllint_version: '${{ env.YAML_LINT_YAMLLINT_VERSION }}'
          target: '${{ env.YAML_LINT_TARGET }}'
